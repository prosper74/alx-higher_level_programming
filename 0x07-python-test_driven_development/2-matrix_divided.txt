The ``Matrix`` module
===================

Using ``matrix_divided``
------------------------

Tests for ``matrix_divided`` from the ``Matrix`` module

      >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test Cases:
-----------

	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, True)
	[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

	>>> matrix_divided(matrix, False)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

	>>> matrix = [[True, 2], [False, 4]]
	>>> matrix_divided(matrix, 2)
	[[0.5, 1.0], [0.0, 2.0]]

	>>> matrix = [1, [2, 3, 4]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [["hello", 3, 4], [2, 3, 4]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[{1, 2, 3}, 2], [1, 2]], 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[{2: 7}, 2], [1, 2]], 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[(1, 3), 2], [1, 2]], 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided({1, 2, 3}, 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided((2, 3, 4), 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided({2: "bye"}, 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided(True, 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided(None, 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [[1, 2], [3, 4]]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

	>>> matrix_divided(matrix, "bob")
	Traceback (most recent call last):
	...
	TypeError: div must be a number

	>>> matrix_divided(matrix, [1, 2, 3])
	Traceback (most recent call last):
	...
	TypeError: div must be a number

	>>> matrix_divided(matrix, {1, 2, 3})
	Traceback (most recent call last):
	...
	TypeError: div must be a number

	>>> matrix_divided(matrix, {"hello": 4})
	Traceback (most recent call last):
	...
	TypeError: div must be a number

	>>> matrix_divided(matrix, (2, 3))
	Traceback (most recent call last):
	...
	TypeError: div must be a number

	>>> matrix_divided(matrix, None)
	Traceback (most recent call last):
	...
	TypeError: div must be a number

	>>> matrix = [[1, 2, 3], [4, 5]]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

	>>> matrix = ([1, 2, 3], [3, 4, 5])
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = {2, 3, 4, 5}
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = []
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [[]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [[], []]
	>>> matrix_divided(matrix, 4)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [[4, 4], [8, 8]]
	>>> new_matrix = matrix_divided(matrix, 4)
	>>> new_matrix == matrix
	False

	>>> matrix_divided(matrix)
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

	>>> matrix_divided(2)
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'
