The ``Addition`` module
=======================

Using ``add_integer``
---------------------

Use the ``add_integer`` function from the ``Addition`` module
    >>> add_integer = __import__('0-add_integer').add_integer

Test Cases
----------
	>>> add_integer(1, 2)
	3

	>>> add_integer(2, 1)
	3

	>>> add_integer(-2, 1)
	-1

	>>> add_integer(1, -2)
	-1

	>>> add_integer(-1, -2)
	-3

	>>> add_integer(10.9, 2)
	12

	>>> add_integer(2, 10.9)
	12

	>>> add_integer(-2.9, 10)
	8

	>>> add_integer(2.9, -10)
	-8

	>>> add_integer(1, "Johnny")
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

	>>> add_integer("hello", 2)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer('c', "steven")
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer(None, 99)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer([1, 2, 3], 77)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer(77, [1, 2, 3])
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

	>>> add_integer({7: "bye"}, 22)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer(4, {7: "hello"})
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

	>>> add_integer(True, 22)
	23

	>>> add_integer(22, False)
	22

	>>> add_integer(True, False)
	1

	>>> add_integer(None, 2)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer(2, None)
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

	>>> add_integer(float("inf"), 1)
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer

	>>> add_integer(1, float("inf"))
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer

	>>> add_integer(1, -float("inf"))
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer

	>>> add_integer(-float("inf"), 1)
	Traceback (most recent call last):
	...
	OverflowError: cannot convert float infinity to integer

	>>> add_integer({1, 2, 3}, 2)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer(2, {1, 2, 3})
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

	>>> add_integer((1, 2, 3), 2)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

	>>> add_integer(2, (1, 2, 3))
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

	>>> add_integer(lambda x: x + 2, 2)
	Traceback (most recent call last):
	TypeError: a must be an integer

	>>> add_integer(2, lambda x: x + 2)
	Traceback (most recent call last):
	TypeError: b must be an integer

	>>> add_integer(4)
	Traceback (most recent call last):
	TypeError: add_integer() missing 1 required positional argument: 'b'

	>>> add_integer(, 4)
	Traceback (most recent call last):
	SyntaxError: invalid syntax

	>>> add_integer()
	Traceback (most recent call last):
	TypeError: add_integer() missing 2 required positional arguments: 'a' and 'b'
